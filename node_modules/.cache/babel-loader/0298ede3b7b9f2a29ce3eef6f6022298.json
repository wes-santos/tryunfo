{"ast":null,"code":"var _jsxFileName = \"/home/weslley/Trybe/Projects/sd-018-b-project-tryunfo/src/App.js\";\nimport React from 'react';\nimport { nanoid } from 'nanoid';\nimport Form from './components/Form';\nimport Card from './components/Card';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.handleChange = _ref => {\n      let {\n        target\n      } = _ref;\n      const {\n        name\n      } = target;\n      const value = target.type === 'checkbox' ? target.checked : target.value;\n      const param = target.value.length;\n      const limitNumber = 90;\n\n      if (param <= 0 || value > limitNumber || value < 0) {\n        this.setState({\n          isSaveButtonDisabled: true\n        });\n      } else {\n        this.setState({\n          isSaveButtonDisabled: false\n        });\n      }\n\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleKeyUp = () => {\n      const limit = 210;\n      const {\n        cardAttr1,\n        cardAttr2,\n        cardAttr3\n      } = this.state;\n\n      if (cardAttr1 !== '' && cardAttr2 !== '' && cardAttr3 !== '' && parseInt(cardAttr1, 10) + parseInt(cardAttr2, 10) + parseInt(cardAttr3, 10) > limit) {\n        this.setState({\n          isSaveButtonDisabled: true\n        });\n      }\n    };\n\n    this.handleClick = event => {\n      event.preventDefault();\n      const cardName = document.getElementById('card-name');\n      const cardDescription = document.getElementById('card-description');\n      const cardImage = document.getElementById('card-image');\n      const attr1 = document.getElementById('first-card-attribute');\n      const attr2 = document.getElementById('second-card-attribute');\n      const attr3 = document.getElementById('third-card-attribute');\n      const cardRare = document.getElementById('rarity-card');\n\n      const cleanInputs = () => {\n        cardName.value = '';\n        cardDescription.value = '';\n        cardImage.value = '';\n        attr1.value = 0;\n        attr2.value = 0;\n        attr3.value = 0;\n        cardRare.value = 'normal';\n        this.setState({\n          cardName: '',\n          cardImage: '',\n          cardDescription: '',\n          cardAttr1: 0,\n          cardAttr2: 0,\n          cardAttr3: 0,\n          cardRare: ''\n        });\n      };\n\n      const saveInputs = prevState => ({\n        cardName: prevState.cardName,\n        cardDescription: prevState.cardDescription,\n        cardAttr1: prevState.cardAttr1.toString(),\n        cardAttr2: prevState.cardAttr2.toString(),\n        cardAttr3: prevState.cardAttr3.toString(),\n        cardImage: prevState.cardImage,\n        cardRare: prevState.cardRare,\n        cardTrunfo: prevState.cardTrunfo\n      }); // Limpa os inputs\n\n\n      this.setState(prevState => ({\n        inputValues: [...prevState.inputValues, saveInputs(prevState)]\n      }));\n      cleanInputs();\n    };\n\n    this.handleClick2 = _ref2 => {\n      let {\n        target: {\n          name\n        }\n      } = _ref2;\n      const {\n        inputValues\n      } = this.state;\n      const copyValues = [...inputValues];\n      let hasTrunfo = false;\n      inputValues.forEach((obj, index) => {\n        if (obj.cardName === name) {\n          copyValues.splice(index, 1);\n        }\n\n        if (obj.hasTrunfo === true) {\n          hasTrunfo = true;\n        } else {\n          hasTrunfo = false;\n        }\n      });\n      this.setState({\n        inputValues: copyValues,\n        cardTrunfo: hasTrunfo\n      });\n    };\n\n    this.state = {\n      cardName: '',\n      cardImage: '',\n      cardDescription: '',\n      cardAttr1: '',\n      cardAttr2: '',\n      cardAttr3: '',\n      cardRare: '',\n      cardTrunfo: false,\n      isSaveButtonDisabled: true,\n      inputValues: []\n    };\n  }\n\n  render() {\n    const {\n      cardName,\n      cardImage,\n      cardDescription,\n      cardAttr1,\n      cardAttr2,\n      cardAttr3,\n      cardRare,\n      cardTrunfo,\n      isSaveButtonDisabled,\n      inputValues\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"apresentation\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://i.imgur.com/GTLE6PW.png\",\n          alt: \"tryunfo-logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-container\",\n        children: [/*#__PURE__*/_jsxDEV(Form, {\n          cardName: cardName,\n          cardImage: cardImage,\n          cardDescription: cardDescription,\n          cardAttr1: cardAttr1.toString(),\n          cardAttr2: cardAttr2.toString(),\n          cardAttr3: cardAttr3.toString(),\n          cardRare: cardRare,\n          cardTrunfo: cardTrunfo,\n          isSaveButtonDisabled: isSaveButtonDisabled,\n          onSaveButtonClick: this.handleClick,\n          onInputChange: this.handleChange,\n          onKeyUpChange: this.handleKeyUp,\n          hasTrunfo: cardTrunfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          cardName: cardName,\n          cardImage: cardImage,\n          cardDescription: cardDescription,\n          cardAttr1: cardAttr1.toString(),\n          cardAttr2: cardAttr2.toString(),\n          cardAttr3: cardAttr3.toString(),\n          cardRare: cardRare,\n          cardTrunfo: cardTrunfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), inputValues.map(obj => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          cardName: obj.cardName,\n          cardImage: obj.cardImage,\n          cardDescription: obj.cardDescription,\n          cardAttr1: obj.cardAttr1.toString(),\n          cardAttr2: obj.cardAttr2.toString(),\n          cardAttr3: obj.cardAttr3.toString(),\n          cardRare: obj.cardRare,\n          cardTrunfo: obj.cardTrunfo\n        }, nanoid(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          name: obj.cardName,\n          \"data-testid\": \"delete-button\",\n          className: \"delete-button\",\n          type: \"button\",\n          onClick: this.handleClick2,\n          children: \"Excluir\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 17\n        }, this)]\n      }, nanoid(), true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 15\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/weslley/Trybe/Projects/sd-018-b-project-tryunfo/src/App.js"],"names":["React","nanoid","Form","Card","App","Component","constructor","handleChange","target","name","value","type","checked","param","length","limitNumber","setState","isSaveButtonDisabled","handleKeyUp","limit","cardAttr1","cardAttr2","cardAttr3","state","parseInt","handleClick","event","preventDefault","cardName","document","getElementById","cardDescription","cardImage","attr1","attr2","attr3","cardRare","cleanInputs","saveInputs","prevState","toString","cardTrunfo","inputValues","handleClick2","copyValues","hasTrunfo","forEach","obj","index","splice","render","map"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { nanoid } from 'nanoid';\nimport Form from './components/Form';\nimport Card from './components/Card';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      cardName: '',\n      cardImage: '',\n      cardDescription: '',\n      cardAttr1: '',\n      cardAttr2: '',\n      cardAttr3: '',\n      cardRare: '',\n      cardTrunfo: false,\n      isSaveButtonDisabled: true,\n      inputValues: [],\n    };\n  }\n\n  handleChange = ({ target }) => {\n    const { name } = target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const param = target.value.length;\n    const limitNumber = 90;\n    if (\n      param <= 0\n      || value > limitNumber\n      || value < 0\n    ) {\n      this.setState({\n        isSaveButtonDisabled: true,\n      });\n    } else {\n      this.setState({\n        isSaveButtonDisabled: false,\n      });\n    }\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleKeyUp = () => {\n    const limit = 210;\n    const { cardAttr1, cardAttr2, cardAttr3 } = this.state;\n    if (cardAttr1 !== ''\n      && cardAttr2 !== ''\n      && cardAttr3 !== ''\n      && parseInt(cardAttr1, 10)\n      + parseInt(cardAttr2, 10)\n      + parseInt(cardAttr3, 10)\n      > limit) {\n      this.setState({\n        isSaveButtonDisabled: true,\n      });\n    }\n  }\n\n  handleClick = (event) => {\n    event.preventDefault();\n    const cardName = document.getElementById('card-name');\n    const cardDescription = document.getElementById('card-description');\n    const cardImage = document.getElementById('card-image');\n    const attr1 = document.getElementById('first-card-attribute');\n    const attr2 = document.getElementById('second-card-attribute');\n    const attr3 = document.getElementById('third-card-attribute');\n    const cardRare = document.getElementById('rarity-card');\n    const cleanInputs = () => {\n      cardName.value = '';\n      cardDescription.value = '';\n      cardImage.value = '';\n      attr1.value = 0;\n      attr2.value = 0;\n      attr3.value = 0;\n      cardRare.value = 'normal';\n      this.setState({\n        cardName: '',\n        cardImage: '',\n        cardDescription: '',\n        cardAttr1: 0,\n        cardAttr2: 0,\n        cardAttr3: 0,\n        cardRare: '',\n      });\n    };\n    const saveInputs = (prevState) => ({\n      cardName: prevState.cardName,\n      cardDescription: prevState.cardDescription,\n      cardAttr1: (prevState.cardAttr1).toString(),\n      cardAttr2: (prevState.cardAttr2).toString(),\n      cardAttr3: (prevState.cardAttr3).toString(),\n      cardImage: prevState.cardImage,\n      cardRare: prevState.cardRare,\n      cardTrunfo: prevState.cardTrunfo,\n    });\n    // Limpa os inputs\n    this.setState((prevState) => ({\n      inputValues: [...prevState.inputValues, saveInputs(prevState)],\n    }));\n    cleanInputs();\n  }\n\n  // Consultei o repositório do Higor Anjos para compreender onde eu estava errando nesta\n  // parte para não passar em dois testes do requisito 09:\n  // https://github.com/tryber/sd-018-b-project-tryunfo/blob/higor-anjos-project-tryunfo/src/App.js\n  handleClick2 = ({ target: { name } }) => {\n    const { inputValues } = this.state;\n    const copyValues = [...inputValues];\n    let hasTrunfo = false;\n    inputValues.forEach((obj, index) => {\n      if (obj.cardName === name) {\n        copyValues.splice(index, 1);\n      }\n      if (obj.hasTrunfo === true) {\n        hasTrunfo = true;\n      } else {\n        hasTrunfo = false;\n      }\n    });\n    this.setState({\n      inputValues: copyValues,\n      cardTrunfo: hasTrunfo,\n    });\n  }\n\n  render() {\n    const {\n      cardName,\n      cardImage,\n      cardDescription,\n      cardAttr1,\n      cardAttr2,\n      cardAttr3,\n      cardRare,\n      cardTrunfo,\n      isSaveButtonDisabled,\n      inputValues,\n    } = this.state;\n    return (\n      <main>\n        <div className=\"apresentation\">\n          <img src=\"https://i.imgur.com/GTLE6PW.png\" alt=\"tryunfo-logo\" />\n        </div>\n        <div className=\"main-container\">\n          <Form\n            cardName={ cardName }\n            cardImage={ cardImage }\n            cardDescription={ cardDescription }\n            cardAttr1={ cardAttr1.toString() }\n            cardAttr2={ cardAttr2.toString() }\n            cardAttr3={ cardAttr3.toString() }\n            cardRare={ cardRare }\n            cardTrunfo={ cardTrunfo }\n            isSaveButtonDisabled={ isSaveButtonDisabled }\n            onSaveButtonClick={ this.handleClick }\n            onInputChange={ this.handleChange }\n            onKeyUpChange={ this.handleKeyUp }\n            hasTrunfo={ cardTrunfo }\n          />\n          <Card\n            cardName={ cardName }\n            cardImage={ cardImage }\n            cardDescription={ cardDescription }\n            cardAttr1={ cardAttr1.toString() }\n            cardAttr2={ cardAttr2.toString() }\n            cardAttr3={ cardAttr3.toString() }\n            cardRare={ cardRare }\n            cardTrunfo={ cardTrunfo }\n          />\n        </div>\n        {/* Créditos a Asafe Diniz por dar a dica do nanoid como key no Slack da turma:\n            https://github.com/ai/nanoid/ */}\n        {\n          inputValues.map(\n            (obj) => (\n              <div key={ nanoid() }>\n                <Card\n                  key={ nanoid() }\n                  cardName={ obj.cardName }\n                  cardImage={ obj.cardImage }\n                  cardDescription={ obj.cardDescription }\n                  cardAttr1={ obj.cardAttr1.toString() }\n                  cardAttr2={ obj.cardAttr2.toString() }\n                  cardAttr3={ obj.cardAttr3.toString() }\n                  cardRare={ obj.cardRare }\n                  cardTrunfo={ obj.cardTrunfo }\n                />\n                <button\n                  name={ obj.cardName }\n                  data-testid=\"delete-button\"\n                  className=\"delete-button\"\n                  type=\"button\"\n                  onClick={ this.handleClick2 }\n                >\n                  Excluir\n                </button>\n              </div>),\n          )\n        }\n      </main>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}